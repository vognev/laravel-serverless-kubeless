---
apiVersion: v1
kind: Secret
metadata:
  name: traefik-dashboard-auth-user
  namespace: traefik-system
type: Opaque
data:
  auth: Y29udmlkZXJhOiRhcHIxJHlVWUxpUjZ1JEFka2c2UlIxZlJkTm94M2Jybnl5OC8=

---
apiVersion: v1
kind: Service
metadata:
  name: traefik-dashboard
  namespace: traefik-system
spec:
  selector:
    app: traefik
    component: traefik
  ports:
  - protocol: TCP
    port: 8080
    name: admin

---
# using older apiVersion to support older k8s versions
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: traefik-dashboard
  namespace: traefik-system
  annotations:
    ingress.kubernetes.io/auth-type: basic
    ingress.kubernetes.io/auth-secret: traefik-dashboard-auth-user
spec:
  rules:
  - host: "traefik.k8s.kvm"
    http:
      paths:
      - backend:
          serviceName: traefik-dashboard
          servicePort: 8080

---
# Source: traefik/templates/03-traefik/01-traefik-configmap.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-conf
  namespace: traefik-system
data:
  traefik.toml: |
    debug = false
    logLevel = "ERROR"
    defaultEntryPoints = ["http"]

    [entryPoints]
      [entryPoints.http]
        address = ":80"

---
# Source: traefik/templates/01-rbac/02-traefik-service-account.yml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik
  namespace: traefik-system

---
# Source: traefik/templates/01-rbac/01-ingress-controller-cluster-role.yml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ingress-controller
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - update

---
# Source: traefik/templates/01-rbac/03-traefik-cluster-role-binding.yml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-controller
subjects:
- kind: ServiceAccount
  name: traefik
  namespace: traefik-system

---
# Source: traefik/templates/03-traefik/04-traefik-service.yml
apiVersion: v1
kind: Service
metadata:
  name: traefik-ingress
  namespace: traefik-system
spec:
  selector:
    app: traefik
    component: traefik
  ports:
  - protocol: TCP
    port: 80
    name: web
  - protocol: TCP
    port: 443
    name: ssl
  type: LoadBalancer
  externalIPs:
  - 10.3.2.3
  - 10.3.2.4
  - 10.3.2.5

---
# Source: traefik/templates/03-traefik/02-traefik-deployment.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  namespace: traefik-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
      component: traefik
  template:
    metadata:
      labels:
        app: traefik
        component: traefik
    spec:
      serviceAccountName: traefik
      terminationGracePeriodSeconds: 60
      containers:
      - image: traefik:1.7.12
        name: traefik
        volumeMounts:
        - mountPath: /config
          name: config
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        args:
        - --api
        - --kubernetes
        - --configFile=/config/traefik.toml
      volumes:
      - name: config
        configMap:
          name: traefik-conf

